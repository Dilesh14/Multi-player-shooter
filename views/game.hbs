    {{!-- edithere --}}
    <div style="display:flex;flex-direction:row;">
        <button id="signoutBtn" class="btn btn-danger">Sign Out</button>
        <div style="width:10px;" ></div>
        <button id="editBtn" class="btn btn-danger">Edit Profile</button>
    </div>
    <div style="display:flex; flex-direction:row; justify-content:space-between; ">
    <div class="card" style="width: 18rem;">
    <div style="display:flex; flex-direction:column;">
    <div class="card-body" style="height:150px;">
        <h5 class="card-title">Movement Control</h5>
        <p class="card-text">Press <span class="badge badge-secondary">W</span> to move forward, <span class="badge badge-secondary">S</span> to move backward, <span class="badge badge-secondary">A</span> to move left and <span class="badge badge-secondary">D</span> to move right.</p>
        
    </div>
    <div id="chat-txt" style="width:auto;height:450px;overflow-y:scroll; border:solid;">
        <div>Lets Play!</div>
    </div>
    <form id='chat-form'>
        <input id='chat-input' type="text" style="width:auto;"></input>
    </form>
    </div>
    </div>
    <canvas id='ctx' width='700' height="600" style="border:1px solid black; "></canvas>
    <div style="width:250px;" style="display:flex; flex-direction:column">
        <h6 align="center">Local high Score</h6>
        <table class="table" >
    <thead>
        <tr>
        <th scope="col">#</th>
        <th scope="col">Username</th>
        <th scope="col">High Score</th>
        
        </tr>
    </thead>
    <tbody id="userlist">
        
    </tbody>
    </table>
    <div style="height:20px"></div>
    <h6 align="center">Global high Score</h6>
    <table class="table" >
    <thead>
        <tr>
        <th scope="col">#</th>
        <th scope="col">Username</th>
        <th scope="col">High Score</th>
        
        </tr>
    </thead>
    <tbody id="globallist">
        
    </tbody>
    </table>
    </div>
    
    </div>

    <script src="http://cdn.socket.io/socket.io-1.4.5.js"></script>
    <script>
        var canvas = document.getElementById("ctx")
        let ctx= canvas.getContext('2d');
        var socket=io();

        ctx.font = '15px Arial';
        const signout = document.getElementById("signoutBtn");
        signout.addEventListener("click",(evt)=>{
            let request = new XMLHttpRequest();
            request.open("POST","/signout");
            request.setRequestHeader('Content-Type','application/json;charset=UTF-8');
            request.responseType = "json";
            request.onload= function(evt){
                    if (request.status==200){
                        let res= request.response;
                        console.log(res);
                        window.location= res.location;
                    }
                    else{
                        console.log("err",request);
                    }
                    };
            let obj={
                text:'SignOut'
                
            };
            request.send(JSON.stringify(obj));


        }); 
        let request = new XMLHttpRequest();
            request.open("POST","/getUser");
            request.setRequestHeader('Content-Type','application/json;charset=UTF-8');
            request.responseType = "json";
            request.onload= function(evt){
                    if (request.status==200){
                        let res= request.response;
                        console.log(res);
                        socket.emit('username',res);
                        
                        
                    }
                    else{
                        console.log("err",request);
                    }
                    };
            let obj={
                text:'SignOut'
                
            };
            request.send(JSON.stringify(obj));
        
        const chattxt=document.getElementById('chat-txt');
        const chatinput=document.getElementById('chat-input');
        const chatf= document.getElementById('chat-form');
        
        socket.on ('addchat',function(c){
            
            chattxt.innerHTML+='<div>'+c+'</div>';
            
        });
        
        chatf.onsubmit= function(e){
            sending=chatinput.value;
            e.preventDefault();
            let request = new XMLHttpRequest();
            request.open("POST","/getUser");
            request.setRequestHeader('Content-Type','application/json;charset=UTF-8');
            request.responseType = "json";
            request.onload= function(evt){
                    if (request.status==200){
                        let res= request.response;
                        console.log(res);
                        sending=res.user+": "+sending;
                        socket.emit('chattoserver',sending);                 
                        
                        
                    }
                    else{
                        console.log("err",request);
                    }
                    };
            let obj={
                text:'SignOut'
                
            };
            request.send(JSON.stringify(obj));
        
            chatinput.value="";
        }
        socket.on('newposition',function (params) {
            

            ctx.clearRect(0,0,2000,1000);
            let c=1;
            const tabuser=document.getElementById("userlist");
            tabuser.innerHTML=null;
            
            for (var x of params.player){
                
                    const tr = document.createElement("tr");
                            const td1 =document.createElement("th");
                            const td2 =document.createElement("td");
                            const td3 =document.createElement("td");
                            
                            td1.innerText = c;
                            td2.innerText = x.username;
                            td3.innerText = x.highscore;
                            
                            c++;
                            tr.appendChild(td1);
                            tr.appendChild(td2);
                            tr.appendChild(td3);
                            
                            tabuser.appendChild(tr);
                
                
            }
            gethighscore();
            for(var i=0; i<params.player.length; i++)
            {
                ctx.fillStyle=params.player[i].color;
                ctx.beginPath();
                ctx.arc(params.player[i].x, params.player[i].y, params.player[i].radius, 0, 2 * Math.PI);
                //ctx.stroke();
                ctx.fill();
                ctx.fillStyle='black';
                params.player[i].username;
                params.player[i].highscore;
                
                
                
            } 
            for(var i=0; i<params.bullet.length; i++)
            {
                ctx.fillStyle='red';
                ctx.fillRect(params.bullet[i].x-5,params.bullet[i].y-5,10,10);
                ctx.fill();
                ctx.fillStyle='black';
            }
            for(var i=0; i<params.enemy.length; i++)
            {
                //console.log('paramsenemy',params.enemy[i].height);
                ctx.fillRect(params.enemy[i].x,params.enemy[i].y,params.enemy[i].width,params.enemy[i].height);
                
            }
            for(var i=0; i<params.energy.length; i++)
            {
                ctx.fillStyle='yellow';
                ctx.beginPath();
                ctx.arc(params.energy[i].x, params.energy[i].y, params.energy[i].radius, 0, 2 * Math.PI);
                //ctx.stroke();
                ctx.fill();
                ctx.fillStyle='black';
                
                
            }
            
            

        


        });
        socket.on('score',function(params){
            ctx.fillText('Score:'+params.score,20,30);
            ctx.fillText('HighScore: '+params.highscore,20,50);
        });
        
        document.onkeydown = function(event){
            if(event.keyCode == 87) //W
                socket.emit('keyPressed',{input:'up', press:true})
            if(event.keyCode == 65) //A
                socket.emit('keyPressed',{input:'left', press:true})
            if(event.keyCode == 83) //S
                socket.emit('keyPressed',{input:'down', press:true})
            if(event.keyCode == 68) //D
                socket.emit('keyPressed',{input:'right', press:true})
        };
        document.onkeyup = function(event){
            if(event.keyCode == 87) //W
                socket.emit('keyPressed',{input:'up', press:false})
            if(event.keyCode == 65) //A
                socket.emit('keyPressed',{input:'left', press:false})
            if(event.keyCode == 83) //S
                socket.emit('keyPressed',{input:'down', press:false})
            if(event.keyCode == 68) //D
                socket.emit('keyPressed',{input:'right', press:false})
        };
        
            document.onmousedown = function(event){
                

            socket.emit('keyPressed',{input:'attack',press:true});
            };
            
            document.onmouseup = function(event){
            socket.emit('keyPressed',{input:'attack',press:false});
            };
        
        

        
        document.onmousemove = function(event){
            let rect = canvas.getBoundingClientRect();
            let cx =event.clientX-rect.left;
            let cy = event.clientY-rect.top;
            //console.log('cx',event.clientX);
            //console.log();
            var angle = Math.atan2(cy,cx)/Math.PI *180;
            socket.emit('keyPressed',{input:'mouseAngle',x:cx,y:cy});
            
        };

        //added code
        ////////////////////req to go to edit user page
        const editbtn = document.getElementById("editBtn");
        editbtn.addEventListener("click",(evt)=>{
            console.log("herere");
            let request = new XMLHttpRequest();
            request.open("POST","/reqeditUser");
            request.setRequestHeader('Content-Type','application/json;charset=UTF-8');
            request.responseType = "json";
            request.onload= function(evt){
                    if (request.status==200){
                        let res= request.response;
                        window.location= res.location;
                    }
                    else{
                        console.log("err",request);
                    }
                    };
            let obj={
                text:'SignOut'
                
            };
            request.send(JSON.stringify(obj));

        });

        // function for loading all the user from the data base
     
      //getting the high score
      function gethighscore(){
        let request = new XMLHttpRequest();
        request.open("post","/getuserhighscore");
         request.setRequestHeader('Content-Type','application/json;charset=UTF-8');
          request.responseType = "json";
          request.onload= function(evt){
                if (request.status==200){
                    let res= request.response;
                    console.log(res);
                    let c =1;
                    const tabuser = document.getElementById("globallist")
                    tabuser.innerHTML = null;
                    for (x of res){
                        const tr = document.createElement("tr");
                        const td1 =document.createElement("th");
                        const td2 =document.createElement("td");
                        const td3 =document.createElement("td");
                        
                        td1.innerText = c;
                        td2.innerText = x.username;
                        td3.innerText = x.highscore;
                        
                        c++;
                        tr.appendChild(td1);
                        tr.appendChild(td2);
                        tr.appendChild(td3);
                        
                        tabuser.appendChild(tr);
                    }
                    
                }
                else{
                    console.log("err",request);
                }
                };
          let obj={
            text:'SignOut'
          };
          request.send(JSON.stringify(obj));
      }
      let userHighscore= gethighscore();
    </script>
    <div style="height:20px; width:100%"></div>